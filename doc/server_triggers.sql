DELIMITER $$

DROP TRIGGER IF EXISTS TEAMMGR_INST_TRG
$$
  
CREATE TRIGGER TEAMMGR_INST_TRG AFTER INSERT ON TEAM_MANAGER
  FOR EACH ROW BEGIN
  update TEAM set CURRENT_MANAGER = NEW.MANAGER_ID where ID = NEW.TEAM_ID;
  update MANAGER set CURRENT_TEAM = NEW.TEAM_ID where ID = NEW.MANAGER_ID;
  update MODIFY_COUNT SET MANAGER_ID = NEW.MANAGER_ID where TEAM_ID = NEW.TEAM_ID;
END 
$$

DROP TRIGGER IF EXISTS LEAGTEAM_INST_TRG
$$  
CREATE TRIGGER LEAGTEAM_INST_TRG AFTER INSERT ON LEAGUE_TEAM
  FOR EACH ROW BEGIN
  update TEAM set CURRENT_LEAGUE = NEW.LEAGUE_ID where ID = NEW.TEAM_ID;
  update MODIFY_COUNT set SEASON_ID = NEW.SEASON_ID, LEAGUE_ID = NEW.LEAGUE_ID where TEAM_ID = NEW.TEAM_ID;
END 
$$  

DROP TRIGGER IF EXISTS TEAMPLYR_INST_TRG
$$

CREATE TRIGGER TEAMPLYR_INST_TRG AFTER INSERT ON TEAM_PLAYER
  FOR EACH ROW BEGIN
    update PLAYER set CURRENT_TEAM = NEW.TEAM_ID where ID = NEW.PLAYER_ID;
END 
$$  

DROP TRIGGER IF EXISTS GAME_INST_TRG
$$  

CREATE TRIGGER GAME_INST_TRG AFTER INSERT ON GAME
  FOR EACH ROW BEGIN
  update SEASON set END_DATE = NEW.GAME_DATE where SEASON_ID = NEW.SEASON_ID and END_DATE < NEW.GAME_DATE;
END 
$$  

DROP TRIGGER IF EXISTS GAME_UPDT_TRG
$$  

CREATE TRIGGER GAME_UPDT_TRG AFTER UPDATE ON GAME
  FOR EACH ROW BEGIN
    IF NEW.SCORE1 is not NULL AND OLD.SCORE1 IS NULL AND NEW.SCORE2 IS NOT NULL AND OLD.SCORE2 IS NULL THEN
      IF NEW.SCORE1 > NEW.SCORE2 THEN
        update LEAGUE_TEAM set WON = WON + 1, PLAYED = PLAYED + 1, FOR_GOAL = FOR_GOAL + NEW.SCORE1, AGAINST_GOAL = AGAINST_GOAL + NEW.SCORE2, POINTS = POINTS + 3 where TEAM_ID = NEW.TEAM1 and SEASON_ID = NEW.SEASON_ID;
	    update LEAGUE_TEAM set LOST = LOST + 1, PLAYED = PLAYED + 1, FOR_GOAL = FOR_GOAL + NEW.SCORE2, AGAINST_GOAL = AGAINST_GOAL + NEW.SCORE1 where TEAM_ID = NEW.TEAM2 and SEASON_ID = NEW.SEASON_ID;
      END IF;
      IF NEW.SCORE1 = NEW.SCORE2 THEN
        update LEAGUE_TEAM set DRAW = DRAW + 1, PLAYED = PLAYED + 1, FOR_GOAL = FOR_GOAL + NEW.SCORE1, AGAINST_GOAL = AGAINST_GOAL + NEW.SCORE2, POINTS = POINTS + 1 where TEAM_ID = NEW.TEAM1 and SEASON_ID = NEW.SEASON_ID;
        update LEAGUE_TEAM set DRAW = DRAW + 1, PLAYED = PLAYED + 1, FOR_GOAL = FOR_GOAL + NEW.SCORE2, AGAINST_GOAL = AGAINST_GOAL + NEW.SCORE1, POINTS = POINTS + 1 where TEAM_ID = NEW.TEAM2 and SEASON_ID = NEW.SEASON_ID;
      END IF;
      IF NEW.SCORE1 < NEW.SCORE2 THEN
        update LEAGUE_TEAM set WON = WON + 1, PLAYED = PLAYED + 1, FOR_GOAL = FOR_GOAL + NEW.SCORE2, AGAINST_GOAL = AGAINST_GOAL + NEW.SCORE1, POINTS = POINTS + 3 where TEAM_ID = NEW.TEAM2 and SEASON_ID = NEW.SEASON_ID;
        update LEAGUE_TEAM set LOST = LOST + 1, PLAYED = PLAYED + 1, FOR_GOAL = FOR_GOAL + NEW.SCORE1, AGAINST_GOAL = AGAINST_GOAL + NEW.SCORE2	 where TEAM_ID = NEW.TEAM1 and SEASON_ID = NEW.SEASON_ID;
      END IF;
      update MODIFY_COUNT set MAX_GAMES = NEW.ID where LEAGUE_ID = NEW.LEAGUE_ID and SEASON_ID = NEW.SEASON_ID;
  END IF;
END 
$$  

DROP TRIGGER IF EXISTS PLYRPERF_INST_TRG
$$  
CREATE TRIGGER PLYRPERF_INST_TRG AFTER INSERT ON PLAYER_PERFORMANCE
  FOR EACH ROW BEGIN
	DECLARE avgPerformance INT;
	DECLARE latestForm VARCHAR(16);
  	select AVG(form) into avgPerformance from PLAYER_PERFORMANCE where PLAYER_ID = NEW.PLAYER_ID and SEASON_ID = NEW.SEASON_ID; 
  	select LATEST_FORM into latestForm from PLAYER where ID = NEW.PLAYER_ID;
	update TEAM_PLAYER set AVG_FORM = avgPerformance, GOALS = GOALS + NEW.GOAL, ASSISTS = ASSISTS + NEW.ASSIST, PLAYED = PLAYED + 1
	 	where PLAYER_ID = NEW.PLAYER_ID and SEASON_ID = NEW.SEASON_ID;
	 CASE 
	 	WHEN latestForm IS NULL THEN update PLAYER set LATEST_FORM = CONCAT('', NEW.FORM) where ID = NEW.PLAYER_ID;
	 	WHEN LENGTH(latestForm) = 0 THEN update PLAYER set LATEST_FORM = CONCAT('', NEW.FORM) where ID = NEW.PLAYER_ID;
	 	WHEN LENGTH(latestForm) < 11 THEN update PLAYER set LATEST_FORM = CONCAT(LATEST_FORM, '/', NEW.FORM) where ID = NEW.PLAYER_ID;
	 	ELSE update PLAYER set LATEST_FORM = CONCAT(SUBSTR(LATEST_FORM, 5), '/', NEW.FORM) where ID = NEW.PLAYER_ID;
	 END CASE;
END 
$$  

DROP TRIGGER IF EXISTS NEWS_INST_TRG
$$  
CREATE TRIGGER NEWS_INST_TRG AFTER INSERT ON NEWS
  FOR EACH ROW BEGIN
	 update MODIFY_COUNT set MAX_NEWS = NEW.ID where MANAGER_ID = NEW.MANAGER_ID;
END 
$$  

DROP TRIGGER IF EXISTS FINANCE_INST_TRG
$$  
CREATE TRIGGER FINANCE_INST_TRG AFTER INSERT ON FINANCE
  FOR EACH ROW BEGIN
	 update MODIFY_COUNT set MAX_FINANCE = NEW.ID where TEAM_ID = NEW.TEAM_ID;
END 
$$  

DROP TRIGGER IF EXISTS MANAGER_INST_TRG
$$  

CREATE TRIGGER MANAGER_INST_TRG AFTER INSERT ON MANAGER
  FOR EACH ROW BEGIN
	  UPDATE MODIFY_COUNT set MANAGER_ID = NEW.ID where TEAM_ID = NEW.CURRENT_TEAM;
END 
$$  

DROP TRIGGER IF EXISTS TEAM_INST_TRG 
$$  
CREATE TRIGGER TEAM_INST_TRG AFTER INSERT ON TEAM
  FOR EACH ROW BEGIN
	  insert into MODIFY_COUNT (TEAM_ID, MANAGER_ID) VALUES (NEW.ID, 0);
END
$$

DELIMITER ;